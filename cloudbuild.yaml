substitutions:
  # Odoo variables
  _TEST_BRANCH: "11.0"
  _RUN_TESTS: "1"
  _LOG_LEVEL: test
  _WITHOUT_DEMO: "False"
  _EXTRA_MODULES: "ncf_invoice_template,ncf_sale,ncf_pos,ncf_manager,ncf_purchase"

# Allow variables without substitutions
options:
  substitution_option: "ALLOW_LOOSE"
  # Use a faster machine for building
  machineType: "N1_HIGHCPU_32"

steps:
  # Pull a previous image of dockerdoo, if exists, to use cache for faster builds
  - name: "gcr.io/cloud-builders/docker"
    id: pull-dockerdoo
    waitFor: ["-"]
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker pull gcr.io/iterativo/dockerdoo:${_TEST_BRANCH} || exit 0

    # Move "cleaned" modules to their own folder and download required dependencies
  - name: "gcr.io/cloud-builders/git"
    id: dependencies
    waitFor: ["-"]
    entrypoint: "bash"
    args:
      - "-c"
      - |
        set -x
        mkdir -p ./${REPO_NAME}-ci
        mv /workspace/*/ ./${REPO_NAME}-ci
        curl https://raw.githubusercontent.com/OCA/maintainer-quality-tools/master/travis/getaddons.py -o getaddons.py && sed -i 's/from git_run import GitRun//g' getaddons.py
        python -c "from getaddons import get_modules; print(','.join(get_modules('./${REPO_NAME}-ci', depth=3)))" > _MODULES
        ###### Add other git dependencies here ########
        git clone --depth 1 --branch ${_TEST_BRANCH} --single-branch https://github.com/camptocamp/odoo-cloud-platform.git
        git clone --depth 1 --branch ${_TEST_BRANCH} --single-branch https://github.com/it-projects-llc/pos-addons.git
        git clone --depth 1 --branch ${_TEST_BRANCH} --single-branch https://github.com/indexa-git/external_service_addons.git      
        ###### Do not modify under this line ####
        chown -R 1000:1000 /builder/home/
        ls .

  # Build the image with the mounted volume
  - name: "gcr.io/cloud-builders/docker"
    id: build
    waitFor: ["pull-dockerdoo", "dependencies"]
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker build . -t 'gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME}' -f-<<EOF
        FROM  gcr.io/iterativo/dockerdoo:${_TEST_BRANCH}
        ENV ODOO_EXTRA_ADDONS $${ODOO_EXTRA_ADDONS}
        USER root
        RUN sudo mkdir -p $${ODOO_EXTRA_ADDONS}
        COPY . $${ODOO_EXTRA_ADDONS}
        RUN export EXTRA_ADDONS_PATHS=$(python -c "from getaddons import get_addons; print(','.join(get_addons('./$${ODOO_EXTRA_ADDONS}', depth=3)))") \
            && echo $${EXTRA_ADDONS_PATHS}
        RUN apt-get -qq update && apt-get -qq install -y --no-install-recommends build-essential \
            && find $${ODOO_EXTRA_ADDONS} -name 'requirements.txt' -exec pip3 --no-cache-dir install -r {} \; \
            && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
            && rm -rf /var/lib/apt/lists/*
        RUN sudo chown -R 1000:1000 $${ODOO_EXTRA_ADDONS}
        RUN ls $${ODOO_EXTRA_ADDONS}
        USER 1000
        EOF
    env:
      - "ODOO_EXTRA_ADDONS=/var/lib/odoo/extra-addons"

    # Install PostgreSQL
  - name: gcr.io/cloud-builders/docker
    id: postgres
    waitFor: ["-"]
    args:
      [
        "run", "--name=${REPO_NAME}-${BRANCH_NAME}",
        "-e", "POSTGRES_DB=postgres",
        "-e", "POSTGRES_USER=odoo",
        "-e", "POSTGRES_PASSWORD=odoo",
        "--network=cloudbuild",
        "-d", "postgres:11",
      ]

  # Run dockerdoo with modules inside the repo and run tests
  - name: "gcr.io/$PROJECT_ID/$REPO_NAME:${BRANCH_NAME}"
    id: tests
    dir: /
    waitFor: ["dependencies", "postgres", "build"]
    entrypoint: bash
    args:
      - "-c"
      - |
        set -x
        ls
        export EXTRA_MODULES=$(< /workspace/_MODULES)
        export ADDONS_PATH=$(< /workspace/_ADDONS_PATH)
        sh /workspace/entrypoint.sh
        [[ "$_RUN_TESTS" == "1" ]] && odoo --addons-path=$${ADDONS_PATH} -d ${REPO_NAME}-${BRANCH_NAME} --db_host=${REPO_NAME}-${BRANCH_NAME} --test-enable --init=$${EXTRA_MODULES} --db_user=odoo --db_password=odoo --stop-after-init || echo "skipping..."
    env:
      - "LOG_LEVEL=${_LOG_LEVEL}"
      - "WITHOUT_DEMO=${_WITHOUT_DEMO}"

# Tag the image for GCR and Cloud Build
images:
  - "gcr.io/$PROJECT_ID/${REPO_NAME}:${BRANCH_NAME}"

# Allow Odoo to build when there's no cache
timeout: 1300s
